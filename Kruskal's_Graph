

import networkx as nx
import matplotlib.pyplot as plt

# Step 1: Create a graph object
G = nx.Graph()

# Step 2: Add edges with weights 
edges = [
    (2451, "New York", "Los Angeles"),
    (713, "New York", "Chicago"),
    (1018, "New York", "Houston"),
    (1631, "New York", "Phoenix"),
    (94, "New York", "Philadelphia"),
    (1745, "Los Angeles", "Chicago"),
    (1374, "Los Angeles", "Houston"),
    (357, "Los Angeles", "Phoenix"),
    (2705, "Los Angeles", "Philadelphia"),
    (1205, "Chicago", "Houston"),
    (1743, "Chicago", "Phoenix"),
    (759, "Chicago", "Philadelphia"),
    (1627, "Houston", "Phoenix"),
    (1548, "Houston", "Philadelphia"),
    (1416, "Phoenix", "Philadelphia"),
    (1371, "San Antonio", "San Diego"),
    (1372, "San Antonio", "Dallas"),
    (1175, "San Antonio", "San Jose"),
    (1467, "San Diego", "Dallas"),
    (1461, "San Diego", "San Jose"),
    (1436, "Dallas", "San Jose")
]

for weight, u, v in edges:
    G.add_edge(u, v, weight=weight)

# Step 3: Compute MST using Kruskal's algorithm
mst = nx.minimum_spanning_tree(G, algorithm='kruskal')

# Step 4: Display the MST edges
print("Edges in Minimum Spanning Tree:")
for u, v, data in mst.edges(data=True):
    print(f"{u} -- {v} == {data['weight']}")

# Visualization
pos = nx.spring_layout(mst, seed=42)
nx.draw(mst, pos, with_labels=True, node_color='blue', node_size=1200, font_size=10)
edge_labels = nx.get_edge_attributes(mst, 'weight')
nx.draw_networkx_edge_labels(mst, pos, edge_labels=edge_labels)
plt.title("Minimum Spanning Tree of U.S. Cities Network")
plt.show()

